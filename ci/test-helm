#!/bin/bash
# test helm deployment
# - build and install helm chart
# - run tests marked with 'remote'

set -ex

# Is there a standard interface name?
for iface in eth0 ens4 enp0s3; do
    IP=$(ifconfig $iface | grep 'inet addr' | cut -d: -f2 | awk '{print $1}');
    if [ -n "$IP" ]; then
        echo "IP: $IP"
        break
    fi
done
if [ -z "$IP" ]; then
    echo "Failed to get IP, current interfaces:"
    ifconfig -a
    exit 2
fi
export BINDER_TEST_URL=http://$IP:30901
export HUB_URL=http://$IP:30902

cat <<EOF > helm-chart/travis-binder.yaml
config:
  BinderHub:
    hub_url: http://$IP:30902
EOF

if [[ ! -z "$GITHUB_ACCESS_TOKEN" ]]; then
  cat <<EOF >> helm-chart/travis-binder.yaml
  GitHubRepoProvider:
    access_token: '$GITHUB_ACCESS_TOKEN'
EOF
fi

if [[ "$TRAVIS_PULL_REQUEST" == "false" && "$TRAVIS_BRANCH" == "master" ]]; then
  openssl aes-256-cbc -K $encrypted_d8355cc3d845_key -iv $encrypted_d8355cc3d845_iv -in travis.enc -out travis -d
  chmod 0400 travis
  export GIT_SSH_COMMAND="ssh -i ${PWD}/travis"
  docker login -u ${DOCKER_USERNAME} -p "${DOCKER_PASSWORD}"
  PUSH="--push --publish-chart"
else
  PUSH=""
fi

echo "building helm chart"
cd helm-chart
helm repo add jupyterhub https://jupyterhub.github.io/helm-chart
helm dependency update binderhub
chartpress --commit-range ${TRAVIS_COMMIT_RANGE} ${PUSH} --extra-message "${TRAVIS_REPO_SLUG}$(git log -1 --pretty=%B | head -n1 | sed 's/^.*\(#[0-9]*\).*/\1/')"
cd ..
# git diff will show us the result of the chartpress render.
# This should only include the tags for chartpress images.
git diff
docker images | sort

# smoke test helm install
echo "installing binderhub helm chart"

cat helm-chart/travis-binder.yaml

helm install \
  --name binder-test \
  --namespace binder-test-helm \
  helm-chart/binderhub \
  -f helm-chart/minikube-binder.yaml \
  -f helm-chart/travis-binder.yaml

# wait for helm deploy to come up
echo "waiting for pods to become ready"
for i in {1..100}; do
    kubectl get pod --all-namespaces
    kubectl --namespace=$BINDER_TEST_NAMESPACE get deployment -o name | xargs -L1 kubectl --namespace=$BINDER_TEST_NAMESPACE rollout status && break
    sleep 3
done
kubectl --namespace=$BINDER_TEST_NAMESPACE get deployment -o name | xargs -L1 kubectl --namespace=$BINDER_TEST_NAMESPACE rollout status


echo "waiting for servers to become responsive"
until curl --fail $BINDER_TEST_URL > /dev/null; do
  sleep 1
done
until curl --fail $HUB_URL> /dev/null; do
  sleep 1
done

echo "running tests against $BINDER_TEST_URL"
# run a few tests again, this time against the helm-installed binder
sleep 10
export ASYNC_TEST_TIMEOUT=15
mark="remote"
if [[ -z "$GITHUB_ACCESS_TOKEN" ]]; then
  mark="$mark and not github_api"
fi
pytest -vsx -m "$mark" --log-cli-level=10 --cov binderhub
helm delete --purge binder-test
